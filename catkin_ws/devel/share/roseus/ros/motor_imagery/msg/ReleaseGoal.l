;; Auto-generated. Do not edit!


(when (boundp 'motor_imagery::ReleaseGoal)
  (if (not (find-package "MOTOR_IMAGERY"))
    (make-package "MOTOR_IMAGERY"))
  (shadow 'ReleaseGoal (find-package "MOTOR_IMAGERY")))
(unless (find-package "MOTOR_IMAGERY::RELEASEGOAL")
  (make-package "MOTOR_IMAGERY::RELEASEGOAL"))

(in-package "ROS")
;;//! \htmlinclude ReleaseGoal.msg.html


(defclass motor_imagery::ReleaseGoal
  :super ros::object
  :slots (_release_position ))

(defmethod motor_imagery::ReleaseGoal
  (:init
   (&key
    ((:release_position __release_position) (make-array 3 :initial-element 0.0 :element-type :float))
    )
   (send-super :init)
   (setq _release_position __release_position)
   self)
  (:release_position
   (&optional __release_position)
   (if __release_position (setq _release_position __release_position)) _release_position)
  (:serialization-length
   ()
   (+
    ;; float64[3] _release_position
    (* 8    3)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64[3] _release_position
     (dotimes (i 3)
       (sys::poke (elt _release_position i) (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64[3] _release_position
   (dotimes (i (length _release_position))
     (setf (elt _release_position i) (sys::peek buf ptr- :double)) (incf ptr- 8)
     )
   ;;
   self)
  )

(setf (get motor_imagery::ReleaseGoal :md5sum-) "fb30b7fc1693ae8b594278c08451ff30")
(setf (get motor_imagery::ReleaseGoal :datatype-) "motor_imagery/ReleaseGoal")
(setf (get motor_imagery::ReleaseGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# GOAL
float64[3] release_position

")



(provide :motor_imagery/ReleaseGoal "fb30b7fc1693ae8b594278c08451ff30")


